package hr.fer.oop.lab5.second;


/**
 * This class represents Artikl. It is an abstract type constructed from two strings.
 * It overrides the methods hashCode, equals, toString and compareTo to fit this type
 * of data.
 * 
 * @author Luka
 *
 */

public class Artikl implements Comparable<Artikl> {
	private String name;
	private String price;
	
	/**
	 * Constructor for the Artikl
	 * @param name name of the Artikl
	 * @param price price of the Artikl
	 */
	
	public Artikl(String name, String price) {
		this.name=name;
		this.price=price;
	}
	
	/**
	 * getter for name
	 * @return name of the Artikl
	 */
	
	public String getName() {
		return name;
	}
	
	/**
	 * getter for price
	 * @return price of Artikl
	 */
	
	public String getPrice() {
		return price;
	}
	
	/**
	 * {@inheritDoc}
	 * Hashcode generated by using name of the Artikl. Generated by eclipse.
	 */
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}
	
	/**
	 * {@inheritDoc}
	 * Equals generated by using name of the Artikl. Generated by eclipse.
	 */
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Artikl))
			return false;
		Artikl other = (Artikl) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}
	
	/**
	 * {@inheritDoc}
	 * Overrides the standard toString to fit the type Artikl
	 */
	
	@Override
	public String toString() {
		return this.name + "  " + this.price + "\n";
	}
	
	/**
	 * {@inheritDoc}
	 * Overrides the standard compareTo to compare the Artikl by their names.
	 */

	@Override
	public int compareTo(Artikl other) {
		int cmp=name.compareTo(other.name);
		return cmp;
	}
	
}
