package hr.fer.oop.lab6.drugi;

/**
 * The class Pair
 * @author Luka
 *
 * @param <L> the generic type, represents right
 * @param <R> the generic type, represents left
 */

public class Pair<L, R> {
	private final L left;
	private final R right;
	
	/**
	 * Instantiates a new Pair
	 * @param left left
	 * @param right right
	 */
	
	public Pair(L left, R right) {
		this.left=left;
		this.right=right;
	}
	
	/**
	 * Getter for left
	 * @return left
	 */
	
	public L getLeft() {
		return left;
	}
	
	/**
	 * Getter for right
	 * @return right
	 */
	
	public R getRight() {
		return right;
	}
	
	/**
	 * Auto-generated by eclipse. Overrides the hashCode method
	 */

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((left == null) ? 0 : left.hashCode());
		result = prime * result + ((right == null) ? 0 : right.hashCode());
		return result;
	}
	
	/**
	 * Auto-generated by eclipse. Overrides the equals method
	 */

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Pair))
			return false;
		@SuppressWarnings("unchecked")
		Pair<L, R> other = (Pair<L,R>) obj;
		if (left == null) {
			if (other.left != null)
				return false;
		} else if (!left.equals(other.left))
			return false;
		if (right == null) {
			if (other.right != null)
				return false;
		} else if (!right.equals(other.right))
			return false;
		return true;
	}
	
	
	
}
